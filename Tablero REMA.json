{
  "__inputs": [
    {
      "name": "DS_DEMO",
      "label": "Demo",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "panel",
      "id": "geomap",
      "name": "Geomap",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.4"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 30,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "scaleDistribution": {
                  "type": "linear"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "max"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "min"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 1
          },
          "id": 34,
          "options": {
            "barRadius": 0,
            "barWidth": 0.9,
            "groupWidth": 0.45,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "mode": "single",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "select \n\tmin(rd.min_value), max(rd.max_value), concat(rc.\"name\", ' - ', rs.id) as \"estacion\"\nfrom receiver_data rd \njoin receiver_station rs on rd.station_id = rs.id \njoin receiver_location rl on rs.location_id = rl.id\njoin receiver_city rc on rl.city_id = rc.id \njoin receiver_measurement rm on rd.measurement_id = rm.id \nwhere rm.id = 2 and rc.\"name\" = '$ciudad'\ngroup by rc.\"name\", rs.id",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Valores de humedad por ciudad",
          "type": "barchart"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "axisGridShow": true,
                "axisLabel": "Temperatura en Â°C",
                "axisPlacement": "auto",
                "fillOpacity": 90,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 0,
                "scaleDistribution": {
                  "type": "linear"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 32
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "min"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "max"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 1
          },
          "id": 32,
          "options": {
            "barRadius": 0,
            "barWidth": 0.95,
            "groupWidth": 0.45,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "orientation": "auto",
            "showValue": "auto",
            "stacking": "none",
            "tooltip": {
              "mode": "single",
              "sort": "none"
            },
            "xTickLabelRotation": 0,
            "xTickLabelSpacing": 0
          },
          "pluginVersion": "9.0.4",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "select \r\n\tmin(rd.min_value), max(rd.max_value), concat(rc.\"name\", ' - ', rs.id) as \"estacion\"\r\nfrom receiver_data rd \r\njoin receiver_station rs on rd.station_id = rs.id \r\njoin receiver_location rl on rs.location_id = rl.id\r\njoin receiver_city rc on rl.city_id = rc.id \r\njoin receiver_measurement rm on rd.measurement_id = rm.id \r\nwhere rm.id = 1 and rc.\"name\" = '$ciudad'\r\ngroup by rc.\"name\", rs.id;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "receiver_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Valores de temperatura por ciudad",
          "type": "barchart"
        }
      ],
      "title": "GrÃ¡ficas de Barra - MÃ¡x, MÃ­n",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 36,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "description": "Toma la Ãºltima mediciÃ³n de temperatura en los dispositivos",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 32
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "temperatura"
                },
                "properties": [
                  {
                    "id": "custom.displayMode",
                    "value": "color-background"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 6,
            "y": 2
          },
          "id": 38,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "9.0.4",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH\r\n  constantes (temperatura, humedad) AS (values(1, 2)),\r\n  value_p AS (\r\n\tSELECT d.time, v.idx as index, v.value as valor, d.station_id \r\n\tFROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.values) WITH ORDINALITY AS v(value, idx) ON TRUE \r\n\tWHERE d.measurement_id = c.temperatura),\r\n  device_p as (select \r\n\tdistinct on (rd.station_id) rd.station_id, base_time, \"time\"\r\n\tfrom receiver_data rd \r\n\twhere rd.measurement_id = 1\r\n\torder by rd.station_id, base_time desc)\r\nSELECT \r\n\tv.valor as temperatura, v.station_id as estacion\r\nFROM value_p v\r\nRIGHT JOIN device_p d \r\n\ton (v.time = d.time AND v.station_id = d.station_id) \r\ninner join (select va.time, max(index) as index from value_p as va group by va.time) b\r\n\ton (b.time = d.time and b.index = v.index)\r\nORDER BY temperatura desc ;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "receiver_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Temperatura de los dispositivos",
          "type": "table"
        }
      ],
      "title": "Tabla dispositivos que sobrepasan determinada temperatura",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 26,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 3
          },
          "id": 20,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom"
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "SELECT\r\n count(*) FILTER(WHERE last_activity >= NOW() - '1 hour'::INTERVAL) as activos,\r\n count(*) FILTER(WHERE last_activity < NOW() - '1 hour'::INTERVAL) as inactivos\r\nFROM receiver_station",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "receiver_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Estaciones activas en la Ãºltima hora",
          "type": "piechart"
        }
      ],
      "title": "GrÃ¡ficas de pastel",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 24,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#ffffff",
                "mode": "fixed"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#f9fff8"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 4
          },
          "id": 18,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "time_series",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH\n  constantes (temperatura, humedad) AS (values(1, 2)),\n  time_p AS (SELECT d.time, t.idx as index, t.time + cast(extract(epoch from d.base_time) as integer) as tiempo FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.times) WITH ORDINALITY AS t(time, idx) ON TRUE WHERE d.measurement_id = c.humedad) ,\n  value_p AS (SELECT d.time, v.idx as index, v.value as valor FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.values) WITH ORDINALITY AS v(value, idx) ON TRUE WHERE d.measurement_id = c.humedad)\nSELECT t.tiempo as time, v.valor as humedad FROM time_p t LEFT JOIN value_p v on (t.time = v.time AND t.index = v.index) ORDER BY time;",
              "refId": "D",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "processor_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Humedad histÃ³rica",
          "transformations": [],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#ffffff",
                "mode": "fixed"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ffffff"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 4
          },
          "id": 15,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "time_series",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH\n  constantes (temperatura, humedad) AS (values(1, 2)),\n  time_p AS (SELECT d.time, t.idx as index, t.time + cast(extract(epoch from d.base_time) as integer) as tiempo FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.times) WITH ORDINALITY AS t(time, idx) ON TRUE WHERE d.measurement_id = c.temperatura) ,\n  value_p AS (SELECT d.time, v.idx as index, v.value as valor FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.values) WITH ORDINALITY AS v(value, idx) ON TRUE WHERE d.measurement_id = c.temperatura)\nSELECT t.tiempo as time, v.valor as temperatura FROM time_p t LEFT JOIN value_p v on (t.time = v.time AND t.index = v.index) ORDER BY time;",
              "refId": "D",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "processor_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Temperatura histÃ³rica",
          "transformations": [],
          "type": "timeseries"
        }
      ],
      "title": "GrÃ¡ficas de lineas",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 22,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "description": "GrÃ¡fico gauge que mide respecto a un mÃ¡ximo y mÃ­nimo histÃ³rico el Ãºltimo valor recibido de humedad ",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue"
                  },
                  {
                    "color": "green",
                    "value": 40
                  },
                  {
                    "color": "red",
                    "value": 90
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 5
          },
          "id": 8,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "showThresholdLabels": true,
            "showThresholdMarkers": true,
            "text": {
              "titleSize": 25
            }
          },
          "pluginVersion": "9.0.4",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "table",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH\n  constantes (temperatura, humedad) AS (values(1, 2)),\n  time_p AS (SELECT d.time, t.idx as index, t.time + cast(extract(epoch from d.base_time) as integer) as tiempo FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.times) WITH ORDINALITY AS t(time, idx) ON TRUE WHERE d.measurement_id = c.humedad) ,\n  value_p AS (SELECT d.time, v.idx as index, v.value as valor FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.values) WITH ORDINALITY AS v(value, idx) ON TRUE WHERE d.measurement_id = c.humedad)\nSELECT v.valor as humedad FROM time_p t LEFT JOIN value_p v on (t.time = v.time AND t.index = v.index) ORDER BY t.tiempo;",
              "refId": "B",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "processor_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Humedad Actual",
          "transparent": true,
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "description": "GrÃ¡fico gauge que mide respecto a un mÃ¡ximo y mÃ­nimo histÃ³rico el Ãºltimo valor recibido de temperatura",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 50,
              "min": -10,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue"
                  },
                  {
                    "color": "green",
                    "value": 5
                  },
                  {
                    "color": "red",
                    "value": 32
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 5
          },
          "id": 10,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": true,
            "showThresholdMarkers": true
          },
          "pluginVersion": "9.0.4",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "${DS_DEMO}"
              },
              "format": "table",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH\n  constantes (temperatura, humedad) AS (values(1, 2)),\n  time_p AS (SELECT d.time, t.idx as index, t.time + cast(extract(epoch from d.base_time) as integer) as tiempo FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.times) WITH ORDINALITY AS t(time, idx) ON TRUE WHERE d.measurement_id = c.temperatura) ,\n  value_p AS (SELECT d.time, v.idx as index, v.value as valor FROM receiver_data as d, constantes as c LEFT JOIN UNNEST(d.values) WITH ORDINALITY AS v(value, idx) ON TRUE WHERE d.measurement_id = c.temperatura)\nSELECT v.valor as temperatura FROM time_p t LEFT JOIN value_p v on (t.time = v.time AND t.index = v.index) ORDER BY t.tiempo;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "min_value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "processor_data",
              "timeColumn": "base_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Temperatura actual",
          "transparent": true,
          "type": "gauge"
        }
      ],
      "title": "GrÃ¡ficas de gauge",
      "type": "row"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 28,
      "panels": [],
      "title": "Mapas",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_DEMO}"
      },
      "description": "Mapa que permite visualizar la informaciÃ³n de los nodos y la humedad\nTamaÃ±o representa la cantidad de nodos tomando informaciÃ³n en ese punto\nColor representa el valor de la humedad respecto a los mÃ¡ximos y mÃ­nimos definidos",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "green",
                "value": 65
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 13,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "default"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "field": "value",
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "field": "quantity",
                  "fixed": 5,
                  "max": 15,
                  "min": 5
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "text": {
                  "field": "value",
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 15,
                  "offsetY": 15,
                  "textAlign": "left",
                  "textBaseline": "bottom"
                }
              }
            },
            "location": {
              "mode": "auto"
            },
            "name": "Layer 1",
            "type": "markers"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "id": "fit",
          "lat": 4.60971,
          "lon": -74.08175,
          "zoom": 6
        }
      },
      "pluginVersion": "9.0.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT sta.location_id, sta.quantity, sta.value, location.lat as latitude, location.lng as longitude from ( SELECT station.location_id, COUNT(*) as quantity, AVG(data.value) as value from (SELECT station_id, AVG(avg_value) as value from receiver_data WHERE measurement_id = 2 group by station_id) data RIGHT JOIN receiver_station station on (data.station_id = station.id) group by station.location_id) sta RIGHT JOIN receiver_location location on (sta.location_id = location.id);",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "min_value"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "processor_data",
          "timeColumn": "base_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Humedad",
      "transparent": true,
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_DEMO}"
      },
      "description": "Mapa que permite visualizar la informaciÃ³n de los nodos y la temperatura\nTamaÃ±o representa la cantidad de nodos tomando informaciÃ³n en ese punto\nColor representa el valor de la temperatura respecto a los mÃ¡ximos y mÃ­nimos definidos",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "green",
                "value": 5
              },
              {
                "color": "red",
                "value": 32
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 6
      },
      "id": 6,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "default"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "field": "value",
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": -5,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "field": "quantity",
                  "fixed": 5,
                  "max": 20,
                  "min": 5
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "text": {
                  "field": "value",
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 13,
                  "offsetX": 15,
                  "offsetY": 15,
                  "textAlign": "left",
                  "textBaseline": "top"
                }
              }
            },
            "location": {
              "mode": "auto"
            },
            "name": "Layer 1",
            "tooltip": true,
            "type": "markers"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "id": "fit",
          "lat": 4.60971,
          "lon": -74.08175,
          "zoom": 6
        }
      },
      "pluginVersion": "9.0.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_DEMO}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nWITH \n  data AS (\n    SELECT station_id, AVG(avg_value) AS value FROM receiver_data\n      WHERE measurement_id = 1 GROUP BY station_id\n  ),\n  estaciones AS (\n  SELECT station.location_id, COUNT(*) AS quantity, AVG(data.value) AS value \n  FROM data data \n  RIGHT JOIN receiver_station station ON (data.station_id = station.id) \n  GROUP BY station.location_id\n)\nSELECT sta.location_id, \n       sta.quantity,\n       sta.value, \n       location.lat AS latitude, \n       location.lng AS longitude \nFROM estaciones sta \nRIGHT JOIN receiver_location location \n  ON (sta.location_id = location.id);",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "min_value"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "processor_data",
          "timeColumn": "base_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Temperatura",
      "transparent": true,
      "type": "geomap"
    }
  ],
  "refresh": false,
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Demo",
          "value": "Demo"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Database",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_DEMO}"
        },
        "definition": "select rc.\"name\"  from receiver_city rc ",
        "hide": 0,
        "includeAll": false,
        "label": "ciudad",
        "multi": false,
        "name": "ciudad",
        "options": [],
        "query": "select rc.\"name\"  from receiver_city rc ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2022-05-23T00:47:16.214Z",
    "to": "2022-05-23T02:04:53.709Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "1s",
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h"
    ]
  },
  "timezone": "",
  "title": "Tablero REMA",
  "uid": "dashboard1",
  "version": 8,
  "weekStart": ""
}